/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package Administrativp;

import Negocio.ISalasNegocios;
import Negocio.ISucursalesNegocio;
import Negocio.NegocioException;
import dtoCinepolis.SalasDTO;
import dtoCinepolis.SucursalesDTO;
import java.time.LocalDateTime;
import javax.swing.JOptionPane;

/**
 *
 * @author Oley
 */
public class ModificarSala extends javax.swing.JFrame {
    private ISalasNegocios salasNegocios;
    private ISucursalesNegocio sucursalesNegocio;
        private int idSalas;
        

    /**
     * Creates new form ModificarSala
     */
    public ModificarSala(int idSalas,ISalasNegocios salasNegocios,ISucursalesNegocio sucursalesNegocio) {
        this.idSalas=idSalas;
        this.salasNegocios=salasNegocios;
        this.sucursalesNegocio=sucursalesNegocio;
        
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jTextField2 = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jTextField3 = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jTextField4 = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jTextField5 = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setText("Editar Sala");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 20, -1, -1));

        jLabel2.setText("Nombre de la sala:");
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 50, -1, -1));
        getContentPane().add(jTextField1, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 70, 330, 30));

        jLabel3.setText("Cantidad de asientos:");
        getContentPane().add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 110, -1, -1));
        getContentPane().add(jTextField2, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 130, 330, 30));

        jLabel4.setText("Tiempo de Limpieza:");
        getContentPane().add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 170, -1, -1));
        getContentPane().add(jTextField3, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 190, 320, 30));

        jLabel5.setText("Sucursal:");
        getContentPane().add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 230, -1, -1));
        getContentPane().add(jTextField4, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 250, 320, 30));

        jLabel6.setText("Costo Sugerido:");
        getContentPane().add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 290, -1, -1));
        getContentPane().add(jTextField5, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 310, 320, 30));

        jButton1.setText("Editar Sucursal");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 350, -1, -1));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
 try {
        String nombreSala = jTextField1.getText().trim();
        String nombreSucursal = jTextField4.getText().trim();
        String minutosTexto = jTextField2.getText().trim();
        String costoTexto = jTextField5.getText().trim();

        // Check for empty fields
        if (nombreSala.isEmpty() || nombreSucursal.isEmpty() || minutosTexto.isEmpty() || costoTexto.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Por favor, completa todos los campos.", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }

        // Validate integer input for seats and minutes
        int cantidadAsientos;
        try {
            cantidadAsientos = Integer.parseInt(jTextField2.getText());
            if (cantidadAsientos <= 0) {
                JOptionPane.showMessageDialog(this, "La cantidad de asientos debe ser un número positivo.", "Error", JOptionPane.ERROR_MESSAGE);
                return;
            }
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(this, "La cantidad de asientos debe ser un número válido.", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }

        int minutosAAnadir;
        try {
            minutosAAnadir = Integer.parseInt(minutosTexto);
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(this, "El tiempo de limpieza debe ser un número válido.", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }

        // Calculate cleaning time
        LocalDateTime fechaLimpieza = LocalDateTime.now().plusMinutes(minutosAAnadir);

        // Validate double input for cost
        double costoAproximado;
        try {
            costoAproximado = Double.parseDouble(costoTexto);
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(this, "El costo sugerido debe ser un número válido.", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }

        // Create and set up DTOs
        SalasDTO salasDTO = new SalasDTO();
        salasDTO.setNombre(nombreSala);
        salasDTO.setCantidadAsientos(cantidadAsientos);
        salasDTO.setTiempoLimpieza(fechaLimpieza);
        salasDTO.setCostoSugerido(costoAproximado);

        SucursalesDTO sucursalDTO = sucursalesNegocio.buscarSucursalPorNombre(nombreSucursal);
        if (sucursalDTO == null) {
            JOptionPane.showMessageDialog(this, "Sucursal no encontrada.", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }
        salasDTO.setSucursales(sucursalDTO);
        salasNegocios.editar(salasDTO);
        JOptionPane.showMessageDialog(this, "Sala añadida exitosamente.", "Éxito", JOptionPane.INFORMATION_MESSAGE);
    } catch (NegocioException e) {
        JOptionPane.showMessageDialog(this, "Error al guardar la sala: " + e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
    }


        // TODO add your handling code here:
    }//GEN-LAST:event_jButton1ActionPerformed

   

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JTextField jTextField3;
    private javax.swing.JTextField jTextField4;
    private javax.swing.JTextField jTextField5;
    // End of variables declaration//GEN-END:variables
}
